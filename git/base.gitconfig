[push]
	default = current

[pull]
	rebase = true

[rebase]
	autosquash = true
	autostash = true

[diff]
	# Git diff will use (i)ndex, (w)ork tree, (c)ommit and (o)bject
	# instead of a/b/c/d as prefixes for patches
	mnemonicprefix = true

[color]
	ui = auto            # covers diff = true, status = auto, branch = auto
	interactive = auto

[gui]

[core]
	editor = vim
	pager = less -RFSX
	excludesfile = ~/.gitfiles/gitignore
	autocrlf = true

[merge]
    autostash = true
    conflictStyle = diff3
	tool = diffconflicts

[mergetool "diffconflicts"]
	cmd = vim -c DiffConflicts $MERGED $BASE $LOCAL $REMOTE
	trustExitCode = true

[mergetool]
	keepBackup = false

[pull]
    twohead = ort

[alias]
	# add
	a = add
	aa = add -A
	ap = add --patch

	# branch
	br = branch

	# checkout
	co = checkout
	nb = "!sh -c \"git fetch && git checkout -b $1 origin/$(git config gitflow.branch.develop) --no-track\" -"

	# cherry-pick
	ch = cherry-pick

	# cleanup
	cleanup = !git remote prune origin && git gc --auto
	nuke = clean -dfx
	prune-branches = "!git fetch -p && git branch -vv | awk '/: gone]/{print $1}' | while read branch; do git branch -D \"$branch\"; done"

	# commit
	ci = commit
	cif = commit --fixup
	cm = commit -m
	amend = commit --amend

	# diff
	d = diff --color-words
	dc = diff --color-words --cached
	last = diff HEAD^

	# flow
	feature = flow feature start
	fix = flow bugfix start

	# log
	h = log --pretty=format:\"%Cred%h%Creset %ad | %C(blue)%d%Creset %s [%C(green)%an%Creset]\" --graph --date=short
	ht = !git --no-pager h --max-count
	hn = h origin/develop..HEAD

	# pull
	pl = pull
	plo = pull origin
	plu = pull upstream
	plr = pull --rebase

	# push
	p = push
	po = push origin
	pom = push origin master
	pu = push -u

	# rebase
	r = rebase -i
	rc = rebase --continue
	ra = rebase --abort
	ri = "!sh -c \"git rebase -i HEAD~$1\" -"
	rnn = "!sh -c \"GIT_SEQUENCE_EDITOR=true git rebase -i HEAD~$1\" -"
	rn = "!sh -c \"GIT_SEQUENCE_EDITOR=true git rebase -i $1\" -"

	# reset
	unstage = reset HEAD
	back = reset --soft HEAD^

	# show
	info = show --pretty="fuller" --name-status

	# status
	st = status -sb
	s = status -sb
	sl = status --long
